name: Deploy Flask App with Nginx

on:
  schedule:
    - cron: "0 */5 * * *" # Runs every 5 hours

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 330 #Allowing 5.5 hrs to ensure full 5hr server run time and some slack

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Required Dependencies
        run: |
          sudo apt update -y
          sudo apt install python3-pip python3-venv -y
          sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 10
          sudo apt install nginx supervisor -y

      - name: Create Application Directory
        run: |
          sudo mkdir -p /var/www/myapp
          sudo chown -R www-data:www-data /var/www/myapp

      - name: Create and Activate Virtual Environment
        run: |
          cd /var/www/myapp
          python -m venv myenv
          source myenv/bin/activate
          pip install flask gunicorn

      - name: Copy Flask App Files
        run: |
          cp -r ./* /var/www/myapp/
      - name: Create WSGI File
        run: |
            echo "from app import app\n\nif __name__ == '__main__':\n    app.run(debug=True)" > /var/www/myapp/wsgi.py

      - name: Create Supervisor Configuration
        run: |
          echo "[program:myapp]\ncommand=/bin/bash -c 'source /var/www/myapp/myenv/bin/activate; gunicorn -w 3 --bind unix:/var/www/myapp/ipc.sock wsgi:app'\ndirectory=/var/www/myapp\nuser=www-data\ngroup=www-data\nautostart=true\nautorestart=true\nstdout_logfile=/var/www/myapp/myapp.log\nstderr_logfile=/var/www/myapp/error.log" | sudo tee /etc/supervisor/conf.d/myapp.conf
          sudo systemctl restart supervisor

      - name: Configure Nginx
        run: |
          echo "server {\n    listen 80;\n    server_name app.example.com;\n\n    location / {\n        include proxy_params;\n        proxy_pass http://unix:/var/www/myapp/ipc.sock;\n    }\n}" | sudo tee /etc/nginx/conf.d/myapp.conf
          sudo systemctl restart nginx

      - name: Get Public IP
        id: get_ip
        run: |
          echo "PUBLIC_IP=$(curl -s ifconfig.me)" >> $GITHUB_OUTPUT

      - name: Print Public IP and Port
        run: |
            echo "Flask App deployed at http://${{ steps.get_ip.outputs.PUBLIC_IP }}"

      - name: Keep Server Running
        run: sleep 5h
